@startuml
'https://plantuml.com/sequence-diagram
!pragma layout smetana

class Main{
{static}+ static void main(String [] args)

- CPHFitness cphFitness

}

class CPHFitness{
- Connection connection
- User currentUser
- Leaderboard leaderboard
- TextUI ui
+ void startMenu()
+ void mainMenu()
+ void createGoal()
+ void userLogin()
+ User registerUser()
+ void addRun()
+ void logOut()
+ void exitProgram()
}

class DatabaseHandler {
+ {static} final String DB_URL
- {static} Connection connection
- {static} TextUI ui
+ {static} Connection connect()
+ {static} void createRunningLogTable(Connection conn)
+ {static} void createGoalTable(Connection conn)
+ {static} void createUserTable(Connection conn)
+ {static} void saveUser(User user)
+ {static} void saveRun(User user, Run run)
+ {static} void saveGoal (User user, Goal goal)
+ {static} void updateDistanceGoals(User user, float progress)
+ {static} void updateTimeGoals(User user, int progress)
+ {static} void updateDualGoals(User user, int time, float distance)
}

class User{
- int id
- String username
- String password
- int age
- int height
- int weight
- String gender
- TextUI ui
+ User (String, String, int, int, int)
+ void updateProfile()
+ void updateWeight(Connection conn)
+ void updateHeight(Connection conn)
+ void viewRunningLog()
+ List<Goal> getGoalsFromDatabase()
}

class Run{
+ Run(int, int, int, float, String)
- int hours
- int minutes
- int seconds
- float distance
- String date
}

class Goal {
 - float distance;
 - float progress;
 - int minutes;
 + Goal (float distance, float progress)
 + Goal (float distance, int minutes, float progress)
 + Goal (int minutes, int progress)
}

class Leaderboard{
+ void viewLeaderboard()
}

class TextUI{
- Scanner scanner
+ void displayMsg(String msg)
+ String promptText(String msg)
+ int promptNumeric(String msg)
}

Main *-- CPHFitness
Main *-- DatabaseHandler

CPHFitness *-- User
CPHFitness *-- Leaderboard
CPHFitness *-- DatabaseHandler
CPHFitness *-- TextUI

User *-- Goal
User *-- Run
User *-- TextUI

DatabaseHandler *-- TextUI

@enduml